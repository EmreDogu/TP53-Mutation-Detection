library(Rtools)
install.packages("rjson")
library(rjson)
sample_data <- fromJSON(file = "dictionary.json")
sample_data <- read.csv("dictionary.csv")
output_dataframe <- as.data.frame(sample_data)
output_dataframe
summary(output_dataframe)
gc()
sample_data <- read.csv("dictionary.csv")
df <- as.data.frame(sample_data)
summary(output_dataframe)
summary(df)
df$name
mutationfrom <- select(df, originaltype, position, mutatedType)
install.packages("dlpyr")
library(dplyr)
mutationfrom <- select(df, originaltype, position, mutatedType)
mutationfrom <- select(df, df$originalType, df$position, df$mutatedType)
df %>% select(2)
df %>% select(3)
df %>% select(1,5,4,6)
df %>% select(1,5,4,6,8)
mutationProb <- df %>% select(1,5,4,6,8)
mutationProb <- df %>% select(1,5,4,6,8)
summary(mutationProb)
plot.ts(mutationProb)
plot(mutationProb$position, mutationProb$siftpredictionValue, type = "o", col=1, ylim = c(0,3))
hist(x=mutationProb$position,y=mutationProb$siftpredictionValue, main = "Sift Prob for positions", xlab = "Positions", ylab = "Prob Values", breaks = 0.1, xlim = c(0,50), col = "papayawhip", border = "red")
mutationProb$position <- as.integer(mutationProb$position)
mutationProb$siftpredictionValue <- as.integer(mutationProb$siftpredictionValue)
hist(x=mutationProb$position,y=mutationProb$siftpredictionValue, main = "Sift Prob for positions", xlab = "Positions", ylab = "Prob Values", breaks = 0.1, xlim = c(0,50), col = "papayawhip", border = "red")
mutationProb$position <- as.integer(mutationProb$position)
mutationProb$siftpredictionValue <- as.integer(mutationProb$siftpredictionValue)
summary(mutationProb)
mutationProb$position <- as.integer(mutationProb$position)
mutationProb$siftpredictionValue <- as.integer(mutationProb$siftpredictionValue)
summary(mutationProb)
hist(x=mutationProb$position,y=mutationProb$siftpredictionValue, main = "Sift Prob for positions", xlab = "Positions", ylab = "Prob Values", breaks = 0.01, xlim = c(0,50), col = "papayawhip", border = "red")
mutationProb$position <- as.integer(mutationProb$position)
mutationProb$siftpredictionValue <- as.integer(mutationProb$siftpredictionValue)
summary(mutationProb)
hist(x=mutationProb$position,y=mutationProb$siftpredictionValue, main = "Sift Prob for positions", xlab = "Positions", ylab = "Prob Values", xlim = c(0,50), col = "papayawhip", border = "red")
hist(x=mutationProb$position,y=mutationProb$siftpredictionValue, main="position to prob",xlab = "positions",ylab = "probs", xlim = c(0,100), breaks = 1)
hist(x=mutationProb$position,y=mutationProb$siftpredictionValue, main="position to prob",xlab = "positions",ylab = "probs", xlim = c(0,100),ylim = c(0,1), breaks = 1)
hist(x=mutationProb$position, main="position to prob",xlab = "positions",ylab = "probs", xlim = c(0,100))
hist(x=mutationProb$position, main="position to prob",xlab = "positions",ylab = "probs", xlim = c(0,100), ylim = c(0,1))
library(dplyr)
library(ggplot2)
install.packages("dlpyr")
install.packages("ggplot2")
library(dplyr)
library(ggplot2)
install.packages("ggplot2")
mutationProb$position <- as.integer(mutationProb$position)
mutationProb$siftpredictionValue <- as.integer(mutationProb$siftpredictionValue)
summary(mutationProb)
ggplot(mutationProb, aes(x=mutationProb$position , y=mutationProb$siftpredictionValue, color= mutationProb$mutatedType))+geom_point()+facet_wrap(~ mutationProb$mutatedType)
mutationProb$position <- as.integer(mutationProb$position)
mutationProb$siftpredictionValue <- as.integer(mutationProb$siftpredictionValue)
summary(mutationProb)
barplot(height = mutationProb$siftpredictionValue, beside = TRUE, col = c(transparent("green", .2),transparent("red", .2)),
main = "title",ylab = "y", xlab = "x",
ylim = c(0, 1))
mutationProb$position <- as.integer(mutationProb$position)
mutationProb$siftpredictionValue <- as.integer(mutationProb$siftpredictionValue)
summary(mutationProb)
barplot(height = mutationProb$siftpredictionValue, beside = TRUE, col = c(("green"),("red")),
main = "title",ylab = "y", xlab = "x",
ylim = c(0, 1))
mutationProb$position
mutatedType
mutationProb$mutatedType
mutationProb$position <- as.integer(mutationProb$position)
mutationProb$siftpredictionValue <- as.integer(mutationProb$siftpredictionValue)
summary(mutationProb)
factorizedmutatedType <- factor(mutationProb$mutatedType)
factorizedmutatedType
factorizedpositions <- factor(mutationProb$position)
factorizedpositions
hist(factorizedmutatedType+factorizedpositions, mutatitonProb, col = c("pink","lightblue"))
hist(factorizedmutatedType+factorizedpositions, mutatitonProb, col = c("pink","lightblue"))
a <- df %>% select(1,5,4,6,8)
summary(a)
a$position <- as.integer(a$position)
a$siftpredictionValue <- as.integer(a$siftpredictionValue)
summary(a)
factorizedmutatedType <- factor(a$mutatedType)
factorizedpositions <- factor(a$position)
rowsum <- rowSums(a$siftpredictionValue)
ggplot(a)
ggplot(a) + geom_bar(aes(x=position))
ggplot(a) + geom_bar(aes(x=factorizedpositions))
ggplot(a) + geom_bar(aes(x=name))
ggplot(a) + geom_bar(aes(x=a$name))
plot(x=position, y=a$siftpredictionValue)
plot(x=a$position, y=a$siftpredictionValue)
a$name
head(a$name)
head(a$originalType)
a$originalType
a$position
a$siftpredictionValue
a$siftpredictionValue <- as.double(a$siftpredictionValue)
a$siftpredictionValue
df
a <- df %>% select(1,5,4,6,as.double(8))
a$siftpredictionValue
a <- df %>% select(1,5,as.integer(4),6,as.double(8))
summary(a)
head(a$name)
a$originalType
a$position
a$mutatedType
a$siftpredictionValue
plot(x=a$position, y=a$siftpredictionValue)
a <- df %>% select(1,5,as.integer(4),6,as.double(8))
summary(a)
head(a$name)
a$originalType
a$position
a$mutatedType
a$siftpredictionValue
factorizedmutatedType <- factor(a$mutatedType)
factorizedpositions <- factor(a$position)
plot(x=a$position, y=a$siftpredictionValue)
plot(x=a$position, y=a$siftpredictionValue, break=1)
plot(x=a$position, y=a$siftpredictionValue)
plot(x=factorizedmutatedType, y=factorizedpositions)
plot(x=factorizedmutatedType, y=a$siftpredictionValue)
plot(x=factorizedmutatedType, y=a$siftpredictionValue, xlab=factorizedmutatedType)
plot(x=factorizedpositions, y=a$siftpredictionValue)
plot(x=a$name,y=a$position)
plot(x=a$mutatedType,y=a$position)
plot(x=a$siftpredictionValue,y=a$position)
View(df)
hist(a$position)
hist(a$siftpredictionValue)
hist(factorizedpositions)
hist(df$sequence)
b
b <- df %>% select(as.integer(4),5,6)
b
plot(factor(b$originalType),b$position)
plot(factor(b$originalType),b$position, xlab="original type", ylab="position")
qplot(b$originalType, b$position)
qplot(b$originalType, b$position, lims=(0,100)
qplot(b$originalType, b$position, xlim(0,20),ylim(0,20))
qplot(b$originalType, b$position, xlim(0,20)
qplot(b$originalType, b$position, xlim(0,20))
qplot(b$originalType, b$position)
qplot(b$originalType, b$position, xlim = c(0,20),ylim = c(0,20))
qplot(b$originalType, b$position,ylim = c(0,20))
qplot(b$originalType, b$position,ylim = c(-20,20))
qplot(b$originalType, b$position)
qplot(b$originalType, c)
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType, b$position)
View(df)
qplot(b$originalType)
qplot(b$mutatedType)
qplot(b$mutatedType, b$position)
View(b)
summary(a)
qplot(b$originalType, b$position)
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType, b$position)
qplot(b$mutatedType, b$position)
View(b)
qplot(b$mutatedType)
qplot(b$originalType)
qplot(b$mutatedType)
qplot(b$mutatedType)
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
qplot(b$mutatedType)
View(b)
b <- df %>% select(as.integer(4),5,6)
qplot(df$originalType)
qplot(df$mutatedType)
View(b)
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
qplot(b$mutatedType)
View(b)
qplot(b$position)
qplot(df$sequence)
qplot(df$siftpredictionValue)
sf <- factor(df$siftpredictionType)
qplot(df$siftpredictionValue,sf)
qplot(df$position,sf)
qplot(df$position,sf, xlim = c(0,100))
qplot(df$position,sf, ylim = c(0,100))
qplot(a,sf, ylim = c(0,100))
a <- as.integer(df$position)
qplot(a,sf, ylim = c(0,100))
df$position <- as.numeric(df$position)
qplot(df$position,sf, ylim = c(0,100))
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
sf <- factor(df$siftpredictionType)
df$position <- as.numeric(df$position)
qplot(df$position,sf, ylim = c(0,100))
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
sf <- factor(df$siftpredictionType)
df$position <- as.numeric(df$position)
qplot(df$position,sf, scale_y_continuous(limits = c(0,100))
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
sf <- factor(df$siftpredictionType)
df$position <- as.numeric(df$position)
qplot(df$position,sf, scale_y_continuous(limits = c(0,100)))
qplot(df$position,sf, scale_y_continuous(limits = c(0,100)))
ggplot(df, aes(position),+geom_point()+scale_y_continuous(limits = c(0,100)))
qplot(b$originalType)
ggplot(df, aes(position,mutatedType),+geom_point()+scale_y_continuous(limits = c(0,100)))
ggplot(df, aes(position,mutatedType),+geom_point())
scale_y_continuous(limits = c(0,100))
ggplot(df, aes(position,mutatedType),+geom_point()+scale_y_continuous(limits = c(0,100)))
ggplot(df, aes(position,mutatedType),scale_y_continuous(limits = c(0,100)))
qplot(df, aes(position,mutatedType),scale_y_continuous(limits = c(0,100)))
qplot(df,scale_y_continuous(limits = c(0,100)))
qplot(df)
qplot(df$mutatedType)
qplot(df$position,sf, scale_y_continuous(limits = c(0,100)))
qplot(df$position)
qplot(df$position,sf, scale_y_continuous(limits = c(0,100)))
qplot(df$position,sf)
factorizedmutatedType <- factor(a$mutatedType)
plot(x=a$position, y=a$siftpredictionValue)
install.packages("dlpyr")
install.packages("ggplot2")
library(dplyr)
library(ggplot2)
install.packages("ggplot2")
```{r}
sample_data <- read.csv("dictionary.csv")
df <- as.data.frame(sample_data)
summary(df)
df
a <- df %>% select(1,5,as.integer(4),6,as.double(8))
summary(a)
factorizedmutatedType <- factor(a$mutatedType)
factorizedpositions <- factor(a$position)
plot(x=a$position, y=a$siftpredictionValue)
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
sf <- factor(df$siftpredictionType)
df$position <- as.numeric(df$position)
qplot(df$position,sf)
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
sf <- factor(df$siftpredictionType)
qplot(df$position,sf)
qplot(df$position,df$name)
qplot(df$position,df$mutatedType)
qplot(b$originalType)
qplot(df$name)
qplot(df$siftpredictionType)
qplot(df$siftpredictionType,main = "Sift Results")
qplot(siftpredictionType,main = "Sift Results")
df$
qplot(df$siftpredictionType,main = "Sift Results")
qplot(df$siftpredictionType,main = "Sift Result")
qplot(df$polyphen2predictionType, main = "Polyphen 2 Result")
qplot(df$polyphen2predictionType, y=value, main = "Polyphen 2 Result")
qplot(df$polyphen2predictionType, main = "Polyphen 2 Result")
b$index <- 1:nrow(b)
b
qplot(df$polyphen2predictionType, y=b$index, main = "Polyphen 2 Result")
qplot(df$polyphen2predictionType, main = "Polyphen 2 Result")
qplot(b$originalType)
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
qplot(df$siftpredictionType,main = "Sift Result")
qplot(df$polyphen2predictionType, main = "Polyphen 2 Result")
qplot(df$position,df$mutatedType)
install.packages("dlpyr")
install.packages("ggplot2")
library(dplyr)
library(ggplot2)
install.packages("ggplot2")
sample_data <- read.csv("/inputs/dictionary.csv")
sample_data <- read.csv("/outputs/dictionary.csv")
sample_data <- read.csv("/outputs/dictionary.csv")
sample_data <- read.csv("C:/Users/Yasin Orta/OneDrive/Masaüstü/TP53-Mutation-Detection/outputs/dictionary.csv")
output_dir <- "C:/Users/Yasin Orta/OneDrive/Masaüstü/TP53-Mutation-Detection/outputs"
render("myreport.Rmd", output_dir = output_dir)
library(rmarkdown)
output_dir <- "C:/Users/Yasin Orta/OneDrive/Masaüstü/TP53-Mutation-Detection/outputs"
render("myreport.Rmd", output_dir = output_dir)
output_dir <- "C:/Users/Yasin Orta/OneDrive/Masaüstü/TP53-Mutation-Detection/outputs"
render("bioproject.Rmd", output_dir = output_dir)
install.packages("ggplot2")
sample_data <- read.csv("./outputs/dictionary.csv")
output_dir <- "./outputs/"
render("bioproject.Rmd", output_dir = output_dir)
install.packages("dlpyr")
install.packages("ggplot2")
library(rmarkdown)
library(dplyr)
library(ggplot2)
sample_data <- read.csv("./outputs/dictionary.csv")
df <- as.data.frame(sample_data)
summary(df)
df
a <- df %>% select(1,5,as.integer(4),6,as.double(8))
summary(a)
factorizedmutatedType <- factor(a$mutatedType)
factorizedpositions <- factor(a$position)
plot(x=a$position, y=a$siftpredictionValue)
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
qplot(df$siftpredictionType,main = "Sift Result")
qplot(df$polyphen2predictionType, main = "Polyphen 2 Result")
qplot(df$position,df$mutatedType)
output_dir <- "./outputs/"
render("bioproject.Rmd", output_dir = output_dir)
output_dir <- "./outputs/"
render("bioproject.Rmd", output_dir = output_dir)
library(rmarkdown)
library(dplyr)
library(ggplot2)
install.packages('dplyr')
install.packages('ggplot2')
library(rmarkdown)
library(dplyr)
library(ggplot2)
install.packages("ggplot2")
install.packages("dplyr")
sample_data <- read.csv("./outputs/dictionary.csv")
install.packages('dplyr')
install.packages('ggplot2')
library(rmarkdown)
library(dplyr)
library(ggplot2)
sample_data <- read.csv("./outputs/dictionary.csv")
df <- as.data.frame(sample_data)
summary(df)
df
a <- df %>% select(1,5,as.integer(4),6,as.double(8))
summary(a)
factorizedmutatedType <- factor(a$mutatedType)
factorizedpositions <- factor(a$position)
plot(x=a$position, y=a$siftpredictionValue)
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
install.packages("ggplot2")
install.packages("dplyr")
qplot(df$siftpredictionType,main = "Sift Result")
qplot(df$polyphen2predictionType, main = "Polyphen 2 Result")
qplot(df$position,df$mutatedType)
output_dir <- "./outputs/"
render("bioproject.Rmd", output_dir = output_dir)
install.packages("dplyr")
install.packages('dplyr')
install.packages('ggplot2')
library(rmarkdown)
library(dplyr)
library(ggplot2)
sample_data <- read.csv("./outputs/dictionary.csv")
df <- as.data.frame(sample_data)
summary(df)
df
a <- df %>% select(1,5,as.integer(4),6,as.double(8))
summary(a)
factorizedmutatedType <- factor(a$mutatedType)
factorizedpositions <- factor(a$position)
plot(x=a$position, y=a$siftpredictionValue)
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
install.packages("ggplot2")
qplot(df$siftpredictionType,main = "Sift Result")
install.packages("dplyr")
qplot(df$polyphen2predictionType, main = "Polyphen 2 Result")
qplot(df$position,df$mutatedType)
output_dir <- "./outputs/"
render("bioproject.Rmd", output_dir = output_dir)
install.packages('dplyr')
install.packages('ggplot2')
library(dplyr)
library(ggplot2)
sample_data <- read.csv("./outputs/dictionary.csv")
df <- as.data.frame(sample_data)
summary(df)
df
a <- df %>% select(1,5,as.integer(4),6,as.double(8))
summary(a)
factorizedmutatedType <- factor(a$mutatedType)
factorizedpositions <- factor(a$position)
plot(x=a$position, y=a$siftpredictionValue)
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
install.packages("ggplot2")
qplot(df$siftpredictionType,main = "Sift Result")
qplot(df$polyphen2predictionType, main = "Polyphen 2 Result")
qplot(df$position,df$mutatedType)
install.packages("dplyr")
install.packages('dplyr')
install.packages('ggplot2')
library(dplyr)
library(ggplot2)
sample_data <- read.csv("./outputs/dictionary.csv")
df <- as.data.frame(sample_data)
summary(df)
df
a <- df %>% select(1,5,as.integer(4),6,as.double(8))
summary(a)
factorizedmutatedType <- factor(a$mutatedType)
factorizedpositions <- factor(a$position)
plot(x=a$position, y=a$siftpredictionValue)
install.packages("ggplot2")
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
install.packages("dplyr")
qplot(df$siftpredictionType,main = "Sift Result")
qplot(df$polyphen2predictionType, main = "Polyphen 2 Result")
qplot(df$position,df$mutatedType)
install.packages('dplyr')
install.packages('ggplot2')
library(dplyr)
library(ggplot2)
sample_data <- read.csv("./outputs/dictionary.csv")
df <- as.data.frame(sample_data)
summary(df)
df
a <- df %>% select(1,5,as.integer(4),6,as.double(8))
summary(a)
factorizedmutatedType <- factor(a$mutatedType)
factorizedpositions <- factor(a$position)
plot(x=a$position, y=a$siftpredictionValue)
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
install.packages("ggplot2")
install.packages("dplyr")
qplot(df$siftpredictionType,main = "Sift Result")
qplot(df$polyphen2predictionType, main = "Polyphen 2 Result")
qplot(df$position,df$mutatedType)
install.packages('dplyr')
install.packages('ggplot2')
library(rmarkdown)
library(dplyr)
library(ggplot2)
sample_data <- read.csv("./outputs/dictionary.csv")
df <- as.data.frame(sample_data)
summary(df)
df
a <- df %>% select(1,5,as.integer(4),6,as.double(8))
summary(a)
factorizedmutatedType <- factor(a$mutatedType)
factorizedpositions <- factor(a$position)
plot(x=a$position, y=a$siftpredictionValue)
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
install.packages("dplyr")
qplot(df$siftpredictionType,main = "Sift Result")
qplot(df$polyphen2predictionType, main = "Polyphen 2 Result")
install.packages("ggplot2")
qplot(df$position,df$mutatedType)
output_dir <- "./outputs/"
render("project.Rmd", output_dir = output_dir)
library(rmarkdown)
library(dplyr)
library(ggplot2)
sample_data <- read.csv("./outputs/dictionary.csv")
df <- as.data.frame(sample_data)
summary(df)
df
a <- df %>% select(1,5,as.integer(4),6,as.double(8))
summary(a)
factorizedmutatedType <- factor(a$mutatedType)
factorizedpositions <- factor(a$position)
plot(x=a$position, y=a$siftpredictionValue)
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
qplot(df$siftpredictionType,main = "Sift Result")
qplot(df$polyphen2predictionType, main = "Polyphen 2 Result")
qplot(df$position,df$mutatedType)
output_dir <- "./outputs/"
render("project.Rmd", output_dir = output_dir)
library(rmarkdown)
library(dplyr)
library(ggplot2)
sample_data <- read.csv("./outputs/dictionary.csv")
df <- as.data.frame(sample_data)
summary(df)
a <- df %>% select(1,5,as.integer(4),6,as.double(8))
summary(a)
factorizedmutatedType <- factor(a$mutatedType)
factorizedpositions <- factor(a$position)
plot(x=a$position, y=a$siftpredictionValue)
b <- df %>% select(as.integer(4),5,6)
qplot(b$originalType)
qplot(df$siftpredictionType,main = "Sift Result")
qplot(df$polyphen2predictionType, main = "Polyphen 2 Result")
qplot(df$position,df$mutatedType)
output_dir <- "./outputs/"
render("project.Rmd", output_dir = output_dir)
{r}
b <- df %>% select(as.integer(4),5,6)
df$index <- 1:nrow(df)
qplot(b$originalType)# original aminoacid distrubition
qplot(df$index, b$mutatedType)# mutated type distrubution
qplot(df$siftpredictionType,main = "Sift Result") # sift result distrubition
qplot(df$polyphen2predictionType, main = "Polyphen 2 Result") # polyphen 2 result distrubution
qplot(df$position,df$mutatedType)# mutated aminoacid locations => white spaces
df$sequence
qplot(df$mutatedType, df$description)
qplot()
qplot(df$mutatedType, df$description)
qplot()
